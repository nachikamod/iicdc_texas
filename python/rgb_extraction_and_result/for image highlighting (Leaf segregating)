from __future__ import division
import cv2
from matplotlib import pyplot as plt
import numpy as numpy
from math import cos,sin



def show(img):
     plt.figure(figsize=(15,15))

     plt.imshow(img,interpolation='nearest')

def overlay_mask(mask, image):
    rgb_mask = cv2.cvtColor(mask, cv2.COLOR_GRAY2RGB)
    img = cv2.addWeighted(rgb_mask, 0.5, image, 0.5, 0)
    show(img)
    
     

def find_leaf(img):
     #1.convert to the correct color scheme
     img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB)

     
     #2.to scale our image
     max_dim=max(img.shape)
     scale=700/max_dim          #since max size 700x600
     img =cv2.resize(img,None,fx=scale,fy=scale)

     #3clean our image
     image_blur=cv2.GaussianBlur(img,(7,7),0) 
     #it smoothes the image so that we get image even
     image_blur_hsv= cv2.cvtColor(image_blur,cv2.COLOR_RGB2HSV)
     print(image_blur_hsv)
     #hsv seperates luma from chroma(intensity and color sperated)
  '''   
img =cv2.imread("C:\\Users\\Rohit\\Desktop\\PYPY_HERE\\green.jpg")   
find_leaf(img)
'''

     #4defining filters
     #first filtering by color
min_green=np.array([#max amount of green intensity])
max_green=np.array([])

#fill it up

mask1=cv2.inRange(image_blur_hsv,min_green,max_green)

#to filter out the brightness
ming2=np.array([])
maxg2=np.array([])
mask2=cv2.inRange(image_blur_hsv,ming2,maxg2)

mask = mask1 + mask2

#5-Segmentation

kernel=cv2.getStructureingElement(cv2.MORPH_ELLIPSE,(15,15))     #THE VALUES TO BE CHANGED ...
MASK_CLOSED = CV2.MORPHOLOGYeX(MASK,CV2.MORPH_CLOSE,kernel)

#6 FIND BIGGEST LEAF
big_leaf_contour , mask_strawberriesn=find_biggest_contour(mask_clean)


#&  overlay

overlay = overlay_mask(mask_clean,image)

#8 circle the main leaf
circled = circle_contour(overlay,big_leaf)

show(circled)

#9 convert back to original color scheme
bgr = cv2.cvtColor(circled,cv2.COLOR_RGB)
